// Code generated by ogen, DO NOT EDIT.

package ogen

import (
	"fmt"
)

func (s *ErrRespStatusCode) Error() string {
	return fmt.Sprintf("code %d: %+v", s.StatusCode, s.Response)
}

type APIHandlerViewGetBadRequest struct {
	Error OptString `json:"error"`
}

// GetError returns the value of Error.
func (s *APIHandlerViewGetBadRequest) GetError() OptString {
	return s.Error
}

// SetError sets the value of Error.
func (s *APIHandlerViewGetBadRequest) SetError(val OptString) {
	s.Error = val
}

func (*APIHandlerViewGetBadRequest) aPIHandlerViewGetRes() {}

// APIHandlerViewGetInternalServerError is response for APIHandlerViewGet operation.
type APIHandlerViewGetInternalServerError struct{}

func (*APIHandlerViewGetInternalServerError) aPIHandlerViewGetRes() {}

type APIHandlerViewGetNotFound struct {
	// A detailed error message.
	Error OptString `json:"error"`
}

// GetError returns the value of Error.
func (s *APIHandlerViewGetNotFound) GetError() OptString {
	return s.Error
}

// SetError sets the value of Error.
func (s *APIHandlerViewGetNotFound) SetError(val OptString) {
	s.Error = val
}

func (*APIHandlerViewGetNotFound) aPIHandlerViewGetRes() {}

type APIHandlerViewGetOK struct {
	Result []APIHandlerViewGetOKResultItem `json:"result"`
}

// GetResult returns the value of Result.
func (s *APIHandlerViewGetOK) GetResult() []APIHandlerViewGetOKResultItem {
	return s.Result
}

// SetResult sets the value of Result.
func (s *APIHandlerViewGetOK) SetResult(val []APIHandlerViewGetOKResultItem) {
	s.Result = val
}

func (*APIHandlerViewGetOK) aPIHandlerViewGetRes() {}

type APIHandlerViewGetOKResultItem struct {
	Position APIHandlerViewGetOKResultItemPosition `json:"position"`
	// Presigned URL for target position.
	URL string `json:"url"`
}

// GetPosition returns the value of Position.
func (s *APIHandlerViewGetOKResultItem) GetPosition() APIHandlerViewGetOKResultItemPosition {
	return s.Position
}

// GetURL returns the value of URL.
func (s *APIHandlerViewGetOKResultItem) GetURL() string {
	return s.URL
}

// SetPosition sets the value of Position.
func (s *APIHandlerViewGetOKResultItem) SetPosition(val APIHandlerViewGetOKResultItemPosition) {
	s.Position = val
}

// SetURL sets the value of URL.
func (s *APIHandlerViewGetOKResultItem) SetURL(val string) {
	s.URL = val
}

type APIHandlerViewGetOKResultItemPosition struct {
	// Target of x position.
	X int `json:"x"`
	// Target of y position.
	Y int `json:"y"`
}

// GetX returns the value of X.
func (s *APIHandlerViewGetOKResultItemPosition) GetX() int {
	return s.X
}

// GetY returns the value of Y.
func (s *APIHandlerViewGetOKResultItemPosition) GetY() int {
	return s.Y
}

// SetX sets the value of X.
func (s *APIHandlerViewGetOKResultItemPosition) SetX(val int) {
	s.X = val
}

// SetY sets the value of Y.
func (s *APIHandlerViewGetOKResultItemPosition) SetY(val int) {
	s.Y = val
}

type ApiKeyAuth struct {
	APIKey string
}

// GetAPIKey returns the value of APIKey.
func (s *ApiKeyAuth) GetAPIKey() string {
	return s.APIKey
}

// SetAPIKey sets the value of APIKey.
func (s *ApiKeyAuth) SetAPIKey(val string) {
	s.APIKey = val
}

type ErrResp struct {
	// A detailed error message.
	Error OptString `json:"error"`
}

// GetError returns the value of Error.
func (s *ErrResp) GetError() OptString {
	return s.Error
}

// SetError sets the value of Error.
func (s *ErrResp) SetError(val OptString) {
	s.Error = val
}

// ErrRespStatusCode wraps ErrResp with StatusCode.
type ErrRespStatusCode struct {
	StatusCode int
	Response   ErrResp
}

// GetStatusCode returns the value of StatusCode.
func (s *ErrRespStatusCode) GetStatusCode() int {
	return s.StatusCode
}

// GetResponse returns the value of Response.
func (s *ErrRespStatusCode) GetResponse() ErrResp {
	return s.Response
}

// SetStatusCode sets the value of StatusCode.
func (s *ErrRespStatusCode) SetStatusCode(val int) {
	s.StatusCode = val
}

// SetResponse sets the value of Response.
func (s *ErrRespStatusCode) SetResponse(val ErrResp) {
	s.Response = val
}

// NewOptString returns new OptString with value set to v.
func NewOptString(v string) OptString {
	return OptString{
		Value: v,
		Set:   true,
	}
}

// OptString is optional string.
type OptString struct {
	Value string
	Set   bool
}

// IsSet returns true if OptString was set.
func (o OptString) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptString) Reset() {
	var v string
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptString) SetTo(v string) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptString) Get() (v string, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptString) Or(d string) string {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}
